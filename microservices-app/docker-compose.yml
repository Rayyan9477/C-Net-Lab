version: '3.8'

services:
  # MongoDB service
  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - backend-network
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rayyan9477
      - MONGO_INITDB_ROOT_PASSWORD=Nobility@2025
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authentication Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mongo
    env_file:
      - ./auth-service/.env
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Todo Service
  todo-service:
    build:
      context: ./todo-service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mongo
      - auth-service
    env_file:
      - ./todo-service/.env
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    networks:
      - frontend-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - auth-service
      - todo-service
      - frontend
    networks:
      - frontend-network
      - backend-network

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  mongo-data:
